{"version":3,"sources":["../src/constants.ts","../src/preview.ts"],"names":["PARAM_KEY","preview","preview_default"],"mappings":"AAAO,IAEMA,CAAY,CAAA,gDAAA,CCgBnBC,IAAAA,CAAAA,CAAwC,CAC5C,UAAY,CAAA,EACZ,CAAA,OAAA,CAAS,CACP,CAACD,CAAS,EAAG,CACf,CAAA,CACF,EAEOE,CAAQD,CAAAA","file":"preview.js","sourcesContent":["export const ADDON_ID = \"storybook/storybook-addon-custom-event-broadcaster\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `storybook-addon-custom-event-broadcaster-param`;\n\nexport const EVENTS = {\n  RESULT: `${ADDON_ID}/result`,\n  REQUEST: `${ADDON_ID}/request`,\n  CLEAR: `${ADDON_ID}/clear`,\n};\n","/**\n * A decorator is a way to wrap a story in extra “rendering” functionality. Many addons define decorators\n * in order to augment stories:\n * - with extra rendering\n * - gather details about how a story is rendered\n *\n * When writing stories, decorators are typically used to wrap stories with extra markup or context mocking.\n *\n * https://storybook.js.org/docs/react/writing-stories/decorators\n */\nimport type { ProjectAnnotations, Renderer } from \"storybook/internal/types\";\nimport { PARAM_KEY } from \"./constants\";\n\n/**\n * Note: if you want to use JSX in this file, rename it to `preview.tsx`\n * and update the entry prop in tsup.config.ts to use \"src/preview.tsx\",\n */\n\nconst preview: ProjectAnnotations<Renderer> = {\n  decorators: [],\n  globals: {\n    [PARAM_KEY]: false,\n  },\n};\n\nexport default preview;\n"]}