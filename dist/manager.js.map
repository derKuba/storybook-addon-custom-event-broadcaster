{"version":3,"sources":["../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../src/manager.tsx","../src/constants.ts","../src/components/custom-event-row/custom-event-row.tsx","../src/styled-components/boxes.ts","../src/styled-components/input.ts","../src/styled-components/table.ts","../src/components/custom-event-panel/custom-event-panel.tsx","../src/Panel.tsx"],"names":["require_ReactPropTypesSecret","__commonJSMin","exports","module","ReactPropTypesSecret","require_factoryWithThrowingShims","emptyFunction","emptyFunctionWithReset","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","require_prop_types","ADDON_ID","PANEL_ID","import_prop_types","FlexedBox","styled","IconBox","inputStyling","StyledInput","StyledTextarea","tableStyle","StyledTable","tableRowStyle","StyledTableRow","tableCellStyle","StyledTableCell","StyledTableCellFirst","StyledTableHeadCell","StyledTableHeadCellFirst","fireEvent","eventName","eventData","selector","data","parsedData","storyBookIframeDocument","error","CustomEventRow","memo","selectorDefault","eventNameDefault","eventDataDefault","displaySelector","setDisplaySelector","useState","setSelector","setEventName","setEventData","displaySelectInput","handleSelectorChange","event","React","Icons","Button","PropTypes","custom_event_row_default","renderTableRows","_parameterData","row","index","attributes","CustomEventPanel","customEventPanelParameterData","useParameter","additionalRows","setAdditionalRows","addNewRow","count","_","custom_event_panel_default","Panel","AddonPanel","addons","types","viewMode"],"mappings":"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","file":"manager.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { addons, types } from \"storybook/internal/manager-api\";\nimport { ADDON_ID, PANEL_ID } from \"./constants\";\n\nimport { Panel } from \"./Panel\";\n\n/**\n * Note: if you want to use JSX in this file, rename it to `manager.tsx`\n * and update the entry prop in tsup.config.ts to use \"src/manager.tsx\",\n */\n\n// Register the addon\naddons.register(ADDON_ID, () => {\n  // Register the panel\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    title: \"Custom Events\",\n    match: ({ viewMode }) => viewMode === \"story\",\n    render: Panel,\n  });\n});\n","export const ADDON_ID = \"storybook/storybook-addon-custom-event-broadcaster\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `storybook-addon-custom-event-broadcaster-param`;\n\nexport const EVENTS = {\n  RESULT: `${ADDON_ID}/result`,\n  REQUEST: `${ADDON_ID}/request`,\n  CLEAR: `${ADDON_ID}/clear`,\n};\n","import React, { useState, memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, Icons } from \"@storybook/components\";\n\nimport { FlexedBox, IconBox } from \"../../styled-components/boxes\";\n\nimport { StyledInput, StyledTextarea } from \"../../styled-components/input\";\nimport {\n  StyledTableRow,\n  StyledTableCell,\n  StyledTableCellFirst,\n} from \"../../styled-components/table\";\n\nconst fireEvent = (eventName: string, eventData: string, selector = \"\") => {\n  const data = eventData || null;\n\n  try {\n    const parsedData = JSON.parse(data);\n\n    const storyBookIframeDocument = document.getElementById(\n      // the preview is inside a iframe\n      \"storybook-preview-iframe\"\n    ).contentWindow.document;\n\n    if (selector.length > 0) {\n      storyBookIframeDocument\n        .querySelector(selector)\n        .dispatchEvent(new CustomEvent(eventName, parsedData));\n    } else {\n      storyBookIframeDocument.dispatchEvent(\n        new CustomEvent(eventName, parsedData)\n      );\n    }\n  } catch (error) {\n    console.log(\"Fire not successfull \", error); // eslint-disable-line no-console\n  }\n};\n\nconst CustomEventRow = memo(\n  ({ selectorDefault = \"\", eventNameDefault = \"\", eventDataDefault = {} }) => {\n    const [displaySelector, setDisplaySelector] = useState(false);\n    const [selector, setSelector] = useState(selectorDefault);\n    const [eventName, setEventName] = useState(eventNameDefault);\n    const [eventData, setEventData] = useState(eventDataDefault);\n\n    const displaySelectInput = () => {\n      setDisplaySelector(true);\n    };\n\n    const handleSelectorChange = (event) => {\n      setSelector(event.target.value);\n    };\n\n    const handleEventNameChange = (event) => {\n      setEventName(event.target.value);\n    };\n\n    const handleDataChange = (event) => {\n      setEventData(event.target.value);\n    };\n\n    return (\n      <StyledTableRow>\n        <StyledTableCellFirst>\n          <StyledInput\n            type=\"text\"\n            value={eventName}\n            onChange={handleEventNameChange}\n          />\n        </StyledTableCellFirst>\n        <StyledTableCell>\n          <StyledTextarea value={eventData} onChange={handleDataChange} />\n        </StyledTableCell>\n        <StyledTableCell>\n          <FlexedBox>\n            {displaySelector === false && selector.length === 0 ? (\n              [\n                <IconBox key=\"iconBox\" className=\"tooltip\">\n                  <Icons icon=\"add\" onClick={displaySelectInput} />\n                  <span tooltip=\"message\">Add Selektor</span>\n                </IconBox>,\n              ]\n            ) : (\n              <StyledTextarea\n                value={selector}\n                onChange={handleSelectorChange}\n              />\n            )}\n          </FlexedBox>\n        </StyledTableCell>\n        <StyledTableCell>\n          <Button\n            primary\n            onClick={() => fireEvent(eventName, eventData, selector)}\n          >\n            send\n          </Button>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  }\n);\n\nCustomEventRow.propTypes = {\n  selectorDefault: PropTypes.string,\n  eventNameDefault: PropTypes.string,\n  eventDataDefault: PropTypes.string,\n};\n\nCustomEventRow.defaultProps = {\n  selectorDefault: \"\",\n  eventDataDefault: \"\",\n};\n\nexport default CustomEventRow;\n","import { styled } from '@storybook/theming';\n\nexport const FlexedBox = styled.div({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n});\n\nexport const IconBox = styled.div`\n  width: 18px;\n  height: 18px;\n  &.tooltip {\n    position: relative;\n    &:hover {\n      cursor: pointer;\n      > [tooltip] {\n        visibility: visible;\n        opacity: 1;\n      }\n    }\n    > [tooltip] {\n      user-select: none;\n      pointer-events: none;\n      position: absolute;\n      opacity: 0;\n      visibility: hidden;\n      font-size: 0.75rem;\n      line-height: 1;\n      min-width: 3em;\n      max-width: 21em;\n      width: max-content;\n      background: rgba(51, 51, 51, 0.7);\n      color: white;\n      padding: 8px 10px;\n      z-index: 1001;\n      left: 22px;\n      top: -6px;\n    }\n  }\n`;\n","import { styled } from '@storybook/theming';\n\nconst inputStyling = {\n  appearance: 'none',\n  border: '0 none',\n  display: 'block',\n  margin: '0',\n  background: '#FFFFFF',\n  padding: '6px 10px',\n  fontSize: '13px',\n  position: 'relative',\n  color: '#333333',\n  boxShadow: 'rgb(0 0 0 / 10%) 0 0 0 1px inset',\n  borderRadius: '4px',\n  lineHeight: ' 20px',\n  flex: '1',\n  textAlign: 'left',\n  overflow: 'visible',\n  maxHeight: '400px',\n};\n\nexport const StyledInput = styled.input(inputStyling);\n\nexport const StyledTextarea = styled.textarea(inputStyling);\n","import { styled } from \"@storybook/theming\";\n\nconst tableStyle = {\n  borderCollapse: \"collapse\",\n  borderSpacing: \"0px\",\n  color: \"rgb(0, 0, 0)\",\n  fontSize: \"13px\",\n  lineHeight: \"20px\",\n  textAlign: \"left\",\n  width: \"100%\",\n  margin: \"0px\",\n};\n\nexport const StyledTable = styled.table(tableStyle);\n\nconst tableRowStyle = {\n  borderTop: \"1px solid rgb(230, 230, 230)\",\n};\n\nexport const StyledTableRow = styled.tr(tableRowStyle);\n\nconst tableCellStyle = {\n  paddingTop: \"10px\",\n  paddingBottom: \"10px\",\n};\n\nexport const StyledTableCell = styled.td(tableCellStyle);\n\nexport const StyledTableCellFirst = styled(StyledTableCell)`\n  padding-left: 20px;\n`;\n\nexport const StyledTableHeadCell = styled.th(tableCellStyle);\n\nexport const StyledTableHeadCellFirst = styled(StyledTableHeadCell)`\n  padding-left: 20px;\n`;\n","import React, { useState } from \"react\";\nimport { useParameter } from \"@storybook/manager-api\";\n\nimport { Icons } from \"@storybook/components\";\n\nimport CustomEventRow from \"../custom-event-row/custom-event-row\";\nimport { FlexedBox, IconBox } from \"../../styled-components/boxes\";\nimport {\n  StyledTable,\n  StyledTableRow,\n  StyledTableHeadCell,\n  StyledTableHeadCellFirst,\n} from \"../../styled-components/table\";\n\nconst renderTableRows = (_parameterData) => {\n  if (_parameterData !== null && _parameterData.length > 0) {\n    const rows = _parameterData.map((row, index) => {\n      const attributes = {\n        selectorDefault: row.selector,\n        eventNameDefault: row.eventName,\n        eventDataDefault: JSON.stringify(row.eventData) || \"\",\n      };\n\n      return (\n        <CustomEventRow\n          key={`key__${row.eventName}__${index}`} // eslint-disable-line react/no-array-index-key\n          {...attributes}\n        />\n      );\n    });\n    return rows;\n  }\n\n  return <CustomEventRow key=\"single\" />;\n};\n\nfunction CustomEventPanel() {\n  const customEventPanelParameterData = useParameter(\"customEventPanel\", null);\n\n  const [additionalRows, setAdditionalRows] = useState(0);\n\n  const addNewRow = () => {\n    const count = additionalRows + 1;\n    setAdditionalRows(count);\n  };\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          <StyledTableHeadCellFirst>EventName</StyledTableHeadCellFirst>\n          <StyledTableHeadCell>Data</StyledTableHeadCell>\n          <StyledTableHeadCell>(opt.) Selector</StyledTableHeadCell>\n          <StyledTableHeadCell> </StyledTableHeadCell>\n        </tr>\n      </thead>\n      <tbody>\n        {renderTableRows(customEventPanelParameterData)}\n        {[...Array(additionalRows).keys()].map((_, index) => (\n          <CustomEventRow\n            key={\n              `addRow_${index + 1}` // eslint-disable-line react/no-array-index-key\n            }\n          />\n        ))}\n        <StyledTableRow>\n          <td>\n            <FlexedBox onClick={addNewRow}>\n              <IconBox key=\"iconBox\">\n                <Icons icon=\"add\" />\n              </IconBox>\n            </FlexedBox>\n          </td>\n        </StyledTableRow>\n      </tbody>\n    </StyledTable>\n  );\n}\n\nexport default CustomEventPanel;\n","import React from \"react\";\n\nimport { AddonPanel } from \"@storybook/components\";\n\nimport DerKubaCustomEventPanel from \"./components/custom-event-panel/custom-event-panel\";\n\ninterface PanelProps {\n  active: boolean;\n}\n\nexport const Panel: React.FC<PanelProps> = (props) => {\n  return (\n    <AddonPanel {...props}>\n      <DerKubaCustomEventPanel />\n    </AddonPanel>\n  );\n};\n"]}