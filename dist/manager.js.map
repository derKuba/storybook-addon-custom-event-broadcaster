{"version":3,"sources":["../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../src/manager.ts","../src/constants.ts","../src/Panel.tsx","../src/components/custom-event-panel/custom-event-panel.tsx","../src/components/custom-event-row/custom-event-row.tsx","../src/styled-components/boxes.ts","../src/styled-components/input.ts","../src/styled-components/table.ts"],"names":["require_ReactPropTypesSecret","__commonJSMin","exports","module","ReactPropTypesSecret","require_factoryWithThrowingShims","emptyFunction","emptyFunctionWithReset","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","require_prop_types","ReactIs","throwOnDirectAccess","addons","types","ADDON_ID","PANEL_ID","EVENTS","React","AddonPanel","useState","useParameter","Icons","import_prop_types","memo","Button","styled","FlexedBox","IconBox","inputStyling","StyledInput","StyledTextarea","tableStyle","StyledTable","tableRowStyle","StyledTableRow","tableCellStyle","StyledTableCell","StyledTableCellFirst","StyledTableHeadCell","StyledTableHeadCellFirst","fireEvent","eventName","eventData","selector","data","parsedData","storyBookIframeDocument","error","CustomEventRow","selectorDefault","eventNameDefault","eventDataDefault","displaySelector","setDisplaySelector","setSelector","setEventName","setEventData","displaySelectInput","handleSelectorChange","event","PropTypes","custom_event_row_default","renderTableRows","_parameterData","row","index","attributes","CustomEventPanel","customEventPanelParameterData","additionalRows","setAdditionalRows","addNewRow","count","_","custom_event_panel_default","Panel","viewMode"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { addons, types } from \"@storybook/manager-api\";\nimport { ADDON_ID, PANEL_ID } from \"./constants\";\n\nimport { Panel } from \"./Panel\";\n\n/**\n * Note: if you want to use JSX in this file, rename it to `manager.tsx`\n * and update the entry prop in tsup.config.ts to use \"src/manager.tsx\",\n */\n\n// Register the addon\naddons.register(ADDON_ID, () => {\n  // Register the panel\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    title: \"Custom Events\",\n    match: ({ viewMode }) => viewMode === \"story\",\n    render: Panel,\n  });\n});\n","export const ADDON_ID = \"storybook/storybook-addon-custom-event-broadcaster\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `storybook-addon-custom-event-broadcaster-param`;\n\nexport const EVENTS = {\n  RESULT: `${ADDON_ID}/result`,\n  REQUEST: `${ADDON_ID}/request`,\n  CLEAR: `${ADDON_ID}/clear`,\n};\n","import React from \"react\";\n\nimport { AddonPanel } from \"@storybook/components\";\n\nimport DerKubaCustomEventPanel from \"./components/custom-event-panel/custom-event-panel\";\n\ninterface PanelProps {\n  active: boolean;\n}\n\nexport const Panel: React.FC<PanelProps> = (props) => {\n  return (\n    <AddonPanel {...props}>\n      <DerKubaCustomEventPanel />\n    </AddonPanel>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useParameter } from \"@storybook/manager-api\";\n\nimport { Icons } from \"@storybook/components\";\n\nimport CustomEventRow from \"../custom-event-row/custom-event-row\";\nimport { FlexedBox, IconBox } from \"../../styled-components/boxes\";\nimport {\n  StyledTable,\n  StyledTableRow,\n  StyledTableHeadCell,\n  StyledTableHeadCellFirst,\n} from \"../../styled-components/table\";\n\nconst renderTableRows = (_parameterData) => {\n  if (_parameterData !== null && _parameterData.length > 0) {\n    const rows = _parameterData.map((row, index) => {\n      const attributes = {\n        selectorDefault: row.selector,\n        eventNameDefault: row.eventName,\n        eventDataDefault: JSON.stringify(row.eventData) || \"\",\n      };\n\n      return (\n        <CustomEventRow\n          key={`key__${row.eventName}__${index}`} // eslint-disable-line react/no-array-index-key\n          {...attributes}\n        />\n      );\n    });\n    return rows;\n  }\n\n  return <CustomEventRow key=\"single\" />;\n};\n\nfunction CustomEventPanel() {\n  const customEventPanelParameterData = useParameter(\"customEventPanel\", null);\n\n  const [additionalRows, setAdditionalRows] = useState(0);\n\n  const addNewRow = () => {\n    const count = additionalRows + 1;\n    setAdditionalRows(count);\n  };\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          <StyledTableHeadCellFirst>EventName</StyledTableHeadCellFirst>\n          <StyledTableHeadCell>Data</StyledTableHeadCell>\n          <StyledTableHeadCell>(opt.) Selector</StyledTableHeadCell>\n          <StyledTableHeadCell> </StyledTableHeadCell>\n        </tr>\n      </thead>\n      <tbody>\n        {renderTableRows(customEventPanelParameterData)}\n        {[...Array(additionalRows).keys()].map((_, index) => (\n          <CustomEventRow\n            key={\n              `addRow_${index + 1}` // eslint-disable-line react/no-array-index-key\n            }\n          />\n        ))}\n        <StyledTableRow>\n          <td>\n            <FlexedBox onClick={addNewRow}>\n              <IconBox key=\"iconBox\">\n                <Icons icon=\"add\" />\n              </IconBox>\n            </FlexedBox>\n          </td>\n        </StyledTableRow>\n      </tbody>\n    </StyledTable>\n  );\n}\n\nexport default CustomEventPanel;\n","import React, { useState, memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, Icons } from \"@storybook/components\";\n\nimport { FlexedBox, IconBox } from \"../../styled-components/boxes\";\n\nimport { StyledInput, StyledTextarea } from \"../../styled-components/input\";\nimport {\n  StyledTableRow,\n  StyledTableCell,\n  StyledTableCellFirst,\n} from \"../../styled-components/table\";\n\nconst fireEvent = (eventName: string, eventData: string, selector = \"\") => {\n  const data = eventData || null;\n\n  try {\n    const parsedData = JSON.parse(data);\n\n    const storyBookIframeDocument = document.getElementById(\n      // the preview is inside a iframe\n      \"storybook-preview-iframe\"\n    ).contentWindow.document;\n\n    if (selector.length > 0) {\n      storyBookIframeDocument\n        .querySelector(selector)\n        .dispatchEvent(new CustomEvent(eventName, parsedData));\n    } else {\n      storyBookIframeDocument.dispatchEvent(\n        new CustomEvent(eventName, parsedData)\n      );\n    }\n  } catch (error) {\n    console.log(\"Fire not successfull \", error); // eslint-disable-line no-console\n  }\n};\n\nconst CustomEventRow = memo(\n  ({ selectorDefault = \"\", eventNameDefault = \"\", eventDataDefault = {} }) => {\n    const [displaySelector, setDisplaySelector] = useState(false);\n    const [selector, setSelector] = useState(selectorDefault);\n    const [eventName, setEventName] = useState(eventNameDefault);\n    const [eventData, setEventData] = useState(eventDataDefault);\n\n    const displaySelectInput = () => {\n      setDisplaySelector(true);\n    };\n\n    const handleSelectorChange = (event) => {\n      setSelector(event.target.value);\n    };\n\n    const handleEventNameChange = (event) => {\n      setEventName(event.target.value);\n    };\n\n    const handleDataChange = (event) => {\n      setEventData(event.target.value);\n    };\n\n    return (\n      <StyledTableRow>\n        <StyledTableCellFirst>\n          <StyledInput\n            type=\"text\"\n            value={eventName}\n            onChange={handleEventNameChange}\n          />\n        </StyledTableCellFirst>\n        <StyledTableCell>\n          <StyledTextarea value={eventData} onChange={handleDataChange} />\n        </StyledTableCell>\n        <StyledTableCell>\n          <FlexedBox>\n            {displaySelector === false && selector.length === 0 ? (\n              [\n                <IconBox key=\"iconBox\" className=\"tooltip\">\n                  <Icons icon=\"add\" onClick={displaySelectInput} />\n                  <span tooltip=\"message\">Add Selektor</span>\n                </IconBox>,\n              ]\n            ) : (\n              <StyledTextarea\n                value={selector}\n                onChange={handleSelectorChange}\n              />\n            )}\n          </FlexedBox>\n        </StyledTableCell>\n        <StyledTableCell>\n          <Button\n            primary\n            onClick={() => fireEvent(eventName, eventData, selector)}\n          >\n            send\n          </Button>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  }\n);\n\nCustomEventRow.propTypes = {\n  selectorDefault: PropTypes.string,\n  eventNameDefault: PropTypes.string,\n  eventDataDefault: PropTypes.string,\n};\n\nCustomEventRow.defaultProps = {\n  selectorDefault: \"\",\n  eventDataDefault: \"\",\n};\n\nexport default CustomEventRow;\n","import { styled } from '@storybook/theming';\n\nexport const FlexedBox = styled.div({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n});\n\nexport const IconBox = styled.div`\n  width: 18px;\n  height: 18px;\n  &.tooltip {\n    position: relative;\n    &:hover {\n      cursor: pointer;\n      > [tooltip] {\n        visibility: visible;\n        opacity: 1;\n      }\n    }\n    > [tooltip] {\n      user-select: none;\n      pointer-events: none;\n      position: absolute;\n      opacity: 0;\n      visibility: hidden;\n      font-size: 0.75rem;\n      line-height: 1;\n      min-width: 3em;\n      max-width: 21em;\n      width: max-content;\n      background: rgba(51, 51, 51, 0.7);\n      color: white;\n      padding: 8px 10px;\n      z-index: 1001;\n      left: 22px;\n      top: -6px;\n    }\n  }\n`;\n","import { styled } from '@storybook/theming';\n\nconst inputStyling = {\n  appearance: 'none',\n  border: '0 none',\n  display: 'block',\n  margin: '0',\n  background: '#FFFFFF',\n  padding: '6px 10px',\n  fontSize: '13px',\n  position: 'relative',\n  color: '#333333',\n  boxShadow: 'rgb(0 0 0 / 10%) 0 0 0 1px inset',\n  borderRadius: '4px',\n  lineHeight: ' 20px',\n  flex: '1',\n  textAlign: 'left',\n  overflow: 'visible',\n  maxHeight: '400px',\n};\n\nexport const StyledInput = styled.input(inputStyling);\n\nexport const StyledTextarea = styled.textarea(inputStyling);\n","import { styled } from \"@storybook/theming\";\n\nconst tableStyle = {\n  borderCollapse: \"collapse\",\n  borderSpacing: \"0px\",\n  color: \"rgb(0, 0, 0)\",\n  fontSize: \"13px\",\n  lineHeight: \"20px\",\n  textAlign: \"left\",\n  width: \"100%\",\n  margin: \"0px\",\n};\n\nexport const StyledTable = styled.table(tableStyle);\n\nconst tableRowStyle = {\n  borderTop: \"1px solid rgb(230, 230, 230)\",\n};\n\nexport const StyledTableRow = styled.tr(tableRowStyle);\n\nconst tableCellStyle = {\n  paddingTop: \"10px\",\n  paddingBottom: \"10px\",\n};\n\nexport const StyledTableCell = styled.td(tableCellStyle);\n\nexport const StyledTableCellFirst = styled(StyledTableCell)`\n  padding-left: 20px;\n`;\n\nexport const StyledTableHeadCell = styled.th(tableCellStyle);\n\nexport const StyledTableHeadCellFirst = styled(StyledTableHeadCell)`\n  padding-left: 20px;\n`;\n"]}